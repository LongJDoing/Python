#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.5 (standalone edition) on Tue May 27 14:54:50 2014

import wx

# begin wxGlade: extracode
# end wxGlade

import extra_var

class MyFrame2(wx.Dialog):
    
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.CAPTION | wx.CLOSE_BOX | wx.SYSTEM_MENU | wx.FRAME_TOOL_WINDOW
        wx.Dialog.__init__(self, *args, **kwds)
        self.list_ctrl_1 = wx.ListCtrl(self, -1, style=wx.LC_REPORT | wx.SUNKEN_BORDER)
        self.list_ctrl_1.InsertColumn(0, u'序号')
        self.list_ctrl_1.InsertColumn(1, u'类名')
        self.list_ctrl_1.SetColumnWidth(0, 40)
        self.list_ctrl_1.SetColumnWidth(1, 150)

        self.sizer_11_staticbox = wx.StaticBox(self, -1, u"类别")
        self.list_ctrl_2 = wx.ListCtrl(self, -1, style=wx.LC_REPORT | wx.SUNKEN_BORDER)
        self.list_ctrl_2.InsertColumn(0, u'文件名')
        self.list_ctrl_2.SetColumnWidth(0, 190)
        self.sizer_4_staticbox = wx.StaticBox(self, -1, u"图像名称")
        self.bitmap_1 = wx.StaticBitmap(self, -1)
        self.text_ctrl_1 = wx.TextCtrl(self, -1, u"等待输入...")
        self.button_1 = wx.Button(self, -1, u"搜索")
        self.sizer_13_staticbox = wx.StaticBox(self, -1, u"搜索")
        self.sizer_12_staticbox = wx.StaticBox(self, -1, u"显示图像")
        
        '''init'''   
        self.trainerclass = {}    
        self.text =''
 
        for i in xrange(len(extra_var.choosetrainer)):
            ind = extra_var.choosetrainer[i]
            ind = extra_var.alltrainer[ind]
            self.list_ctrl_1.InsertStringItem(i, str(ind[0]))
            self.list_ctrl_1.SetStringItem(i, 1, ind[2])
            str1 = str(ind[2])
            #print str1
            self.trainerclass[str1] = i
            self.list_ctrl_1.SetItemData(i, i)
        ''''''    
        self.__set_properties()
        self.__do_layout()
        self.Show()
        # end wxGlade
        
        self.list_ctrl_1.Bind(wx.EVT_LIST_COL_CLICK, self.OnColClick, self.list_ctrl_1)
        self.list_ctrl_1.Bind(wx.EVT_LIST_ITEM_SELECTED, self.OnSelectMustHave, self.list_ctrl_1)
        self.list_ctrl_2.Bind(wx.EVT_LIST_ITEM_SELECTED, self.OnSelectfile, self.list_ctrl_2)
        self.text_ctrl_1.Bind(wx.EVT_TEXT, self.OnChooseText, self.text_ctrl_1)
        self.button_1.Bind(wx.EVT_BUTTON, self.OnSearch, self.button_1)

    def OnColClick(self, event):
        print "column clicked"
        event.Skip() 
    
    import os
    Leafpath = os.getcwd()
    def OnSelectMustHave(self,event):  
        
        index = self.list_ctrl_1.GetFocusedItem()
        name = self.list_ctrl_1.GetItemText(index,1) 
        
        if not len(extra_var.trainerimlist[name]):
            event.Skip()
        text = extra_var.trainerimlist[name]

        filename = text.split('\n')
        self.list_ctrl_2.DeleteAllItems()
        for i in xrange(len(filename)-1):
            #mytext = filename[i].split('\\')
            
            self.list_ctrl_2.InsertStringItem(i, filename[i])
            self.list_ctrl_2.SetItemData(i, i)

        #num_items = self.list_ctrl_1.GetItemCount()
        #items =[]
        #map(lambda x:self.list_ctrl_1.SetItemBackgroundColour(x,wx.LIGHT_GREY) ,set(extra_var.choosetrainer))
    def scale_bitmap(self, bitmap, width, height):
        image = bitmap.Scale(width, height, wx.IMAGE_QUALITY_HIGH)
        result = wx.BitmapFromImage(image)
        return result
    def OnSelectfile(self,event):
        index = self.list_ctrl_2.GetFocusedItem()
        name = self.list_ctrl_2.GetItemText(index,0) 
        #print name
        bmp = wx.Image(name, wx.BITMAP_TYPE_ANY)
        bitmap = self.scale_bitmap(bmp, self.bitmap_1.GetSize()[0], self.bitmap_1.GetSize()[1])
        self.bitmap_1.SetBitmap(bitmap)
    
    def OnChooseText(self,event):
        self.text = self.text_ctrl_1.GetValue()
        
    def OnSearch(self,event):
        try:
        #print self.trainerclass
        #print str(self.text)
            index = self.trainerclass[str(self.text)]
            #print index
            self.list_ctrl_1.Focus(index)
            self.list_ctrl_1.Select(index)
        except:
            print u"不存在该类"
            event.Skip()
            
    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle(u"训练结果显示")
        self.SetSize((610, 500))
        self.list_ctrl_1.SetMinSize((190, 450))
        self.list_ctrl_2.SetMinSize((190, 446))
        self.text_ctrl_1.SetMinSize((120, 35))
        self.button_1.SetMinSize((90, 35))
        self.button_1.SetForegroundColour(wx.Colour(142, 35, 35))
        self.button_1.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_12_staticbox.Lower()
        sizer_12 = wx.StaticBoxSizer(self.sizer_12_staticbox, wx.VERTICAL)
        self.sizer_13_staticbox.Lower()
        sizer_13 = wx.StaticBoxSizer(self.sizer_13_staticbox, wx.VERTICAL)
        self.sizer_4_staticbox.Lower()
        sizer_4 = wx.StaticBoxSizer(self.sizer_4_staticbox, wx.HORIZONTAL)
        self.sizer_11_staticbox.Lower()
        sizer_11 = wx.StaticBoxSizer(self.sizer_11_staticbox, wx.HORIZONTAL)
        sizer_11.Add(self.list_ctrl_1, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_11, 1, wx.EXPAND, 0)
        sizer_4.Add(self.list_ctrl_2, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_4, 1, 0, 0)
        sizer_12.Add(self.bitmap_1, 1, wx.EXPAND, 0)
        sizer_13.Add(self.text_ctrl_1, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_13.Add((20, 90), 0, 0, 0)
        sizer_13.Add(self.button_1, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_12.Add(sizer_13, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_12, 1, wx.EXPAND, 0)
        sizer_1.Add(sizer_2, 1, wx.ALL, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

